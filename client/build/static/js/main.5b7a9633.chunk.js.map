{"version":3,"sources":["components/Dashboard.jsx","components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","useState","allProjects","setAllProjects","dateFormat","today","Date","getAllProjects","axios","get","then","res","data","catch","err","console","error","setDate","getDate","useEffect","updateStatus","id","statusChange","put","log","className","style","maxHeight","slice","reverse","filter","status","map","Projects","i","title","moment","dueDate","format","onClick","e","_id","delete","href","Form","setTitle","setDueDate","errors","setErrors","onSubmit","preventDefault","post","navigate","type","value","onChange","target","placeholder","message","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b7a9633.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst Dashboard = () => {\r\n  const [allProjects, setAllProjects] = useState([]);\r\n  const dateFormat = \"MM/DD/YYYY\";\r\n\r\n  var today = new Date();\r\n  today.setDate(today.getDate())\r\n\r\n  useEffect(() => {\r\n    getAllProjects();\r\n  }, []);\r\n\r\n  function getAllProjects() {\r\n    axios.get(\"http://localhost:8000/api/projects\")\r\n      .then(res => { setAllProjects(res.data) })\r\n      .catch(err => { console.error(err) });\r\n  }\r\n  const updateStatus = (id, statusChange) => {\r\n    axios.put(`http://localhost:8000/api/projects/update/${id}`, { \"status\": statusChange })\r\n      .then(res => {\r\n        getAllProjects();\r\n        console.log(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      }, [])\r\n  }\r\n\r\n  const remove = _id => {\r\n    axios.delete(`http://localhost:8000/api/projects/delete/${_id}`)\r\n      .then(res => {\r\n        console.log(res);\r\n        getAllProjects();\r\n      }).catch(err => console.error(err));\r\n  }\r\n\r\n\r\n  //For a black belt:\r\n  // Note I worked two options from black belt\r\n  //Ensure the Project is unique when adding it to the database\r\n  //Indicate if the project is past due (due date is earlier than today)\r\n\r\n  \r\n  return (\r\n    <div className=\"my-3 text-center\">\r\n      <div className=\" row justify-content-center\" >\r\n        <div className=\"card my-3 border border-dark\">\r\n      <h1>Project Manager</h1>\r\n          <div className=\"card-group   \">\r\n            <div className=\"card border border-dark\">\r\n              <h3 className=\"card-header bg-primary border border-dark\">BackLog</h3>\r\n              <div className=\"overflow-auto\" style={{ maxHeight: \"500px\" }}>\r\n\r\n                {allProjects.slice(0).reverse().filter(status => status.status === \"backlog\").map((Projects, i) =>\r\n                  <div className=\"card-body\" key={i}>\r\n                    <div className=\"border border-dark\">\r\n                      <div className=\"m-3\">\r\n                        <h4 className=\"card-title\">{Projects.title}</h4>\r\n                        <p className={moment(Projects.dueDate) < moment(today) ? 'text-danger' : \"\"}>Due Date: {moment(Projects.dueDate).format(dateFormat)}</p>\r\n                        <button className=\"btn btn-warning btn-block\" onClick={(e) => { updateStatus(Projects._id, \"inProgress\") }}>Start Project</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"card border border-dark\">\r\n              <h3 className=\"card-header bg-warning border border-dark\">In Progress</h3>\r\n              <div className=\"overflow-auto\" style={{ maxHeight: \"500px\" }}>\r\n\r\n                {allProjects.slice(0).reverse().filter(status => status.status === \"inProgress\").map((Projects, i) =>\r\n                  <div className=\"card-body\" key={i}>\r\n                    <div className=\"border border-dark\">\r\n                      <div className=\"m-3\">\r\n                        <h4 className=\"card-title\">{Projects.title}</h4>\r\n                        <p className={moment(Projects.dueDate) < moment(today) ? 'text-danger' : \"\"}>Due Date: {moment(Projects.dueDate).format(dateFormat)}</p>\r\n                        <button className=\"btn btn-success btn-block\" onClick={(e) => { updateStatus(Projects._id, \"completed\") }}>Move to Completed</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"card border border-dark\">\r\n              <h3 className=\"card-header bg-success border border-dark\">Completed</h3>\r\n              <div className=\"overflow-auto\" style={{ maxHeight: \"300px\" }}>\r\n\r\n                {allProjects.slice(0).reverse().filter(status => status.status === \"completed\").map((Projects, i) =>\r\n                  <div className=\"card-body\" key={i}>\r\n                    <div className=\"border border-dark\">\r\n                      <div className=\"m-3\">\r\n                        <h4 className=\"card-title\">{Projects.title}</h4>\r\n                        <p className={moment(Projects.dueDate) < moment(today) ? 'text-danger' : \"\"}>Due Date: {moment(Projects.dueDate).format(dateFormat)}</p>\r\n                        <button className=\"btn btn-danger btn-block\" onClick={e => remove(Projects._id)}>Remove Project</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <a href=\"/projects/new\" className=\"btn btn-primary btn-block col-3 ml-4 my-2\"><strong >Add New Project</strong></a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst Form = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [dueDate, setDueDate] = useState(\"\")\r\n  const [errors, setErrors] = useState({});\r\n  const status = \"backlog\"; \r\n\r\n  const create = e => {\r\n    e.preventDefault();\r\n    axios.post(\"http://localhost:8000/api/projects/new\", { title, dueDate, status })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      if (res.data.errors) {\r\n        setErrors(res.data.errors);\r\n      } else {\r\n        navigate(\"/\");\r\n        }\r\n      }).catch(err => {\r\n        console.error(err);\r\n      });\r\n    }\r\n  return (\r\n    <div>\r\n      <h1 className=\"my-5 text-center\">Project Manager</h1>\r\n      <div className=\"offset-2\">\r\n        <h5><a href=\"/\" className=\"offset-6\">Back to Dashboard</a></h5>\r\n        <form onSubmit={create}>\r\n          <div className=\"col-10\">\r\n            <h4 className=\"mb-3\">Plan a new project:</h4>\r\n\r\n            <label>Title: </label>\r\n            <input className=\"form-control\" type=\"text\" value={title} onChange={e => setTitle(e.target.value)} placeholder=\"Title in here\"/>\r\n            <p className=\"text-danger\">{errors.title ? errors.title.message : ''}</p>\r\n\r\n            <label>Due Date: </label>\r\n            <input className=\"form-control\" type=\"date\" value={dueDate} onChange={e => setDueDate(e.target.value)}/>\r\n            <p className=\"text-danger\">{errors.dueDate ? errors.dueDate.message : ''}</p>\r\n\r\n            <button className=\"my-3 btn btn-block btn-primary\" type=\"submit\">Plan Project</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Form\r\n","import 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { Router } from '@reach/router';\nimport Dashboard from './components/Dashboard';\nimport Form from './components/Form';\n\nfunction App() {\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <Dashboard path=\"/\"/>\n        <Form path=\"/projects/new\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}